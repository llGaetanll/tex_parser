WHITESPACE = _{ linespace | NEWLINE } 

linespace = _{ " " | "\t" }

COMMENT = _{ !("\\") ~ "%" ~ (!NEWLINE ~ ANY)* }

file = _{ SOI ~ expr* }
expr = _{
    cmd
  | text
  | math
  | special
}


//
// COMMANDS
//
cmd = ${
   "\\" ~ cmd_name ~ (linespace)* ~ cmd_opts? ~ (linespace)* ~ (cmd_args ~ (linespace)*)*
}

cmd_name = { ASCII_ALPHA+ ~ ("*")? }

cmd_opts = !{
  "[" ~ "]"

  | "[" ~ (cmd_opt ~ ",")* ~ cmd_opt ~ "]"
}

cmd_opt = _{ cmd_opt_kv | cmd_opt_v }

cmd_opt_v = { cmd | ASCII_ALPHANUMERIC+ } // TODO: this might not be quite right?
cmd_opt_k = { ASCII_ALPHA+ }
cmd_opt_kv = { cmd_opt_k ~ "=" ~ cmd_opt_v }

// TODO: this should consume a character even if no braces are present
cmd_args = !{
  cmd_arg_empty
  | "{" ~ cmd_arg+ ~ "}"
}

cmd_arg_empty = { "{" ~ "}" }
cmd_arg = { cmd | text }


//
// TEXT
//
text = { (lparen | rparen | char)+ }

char = _{
   !(special) ~ ASCII
}

special = _{
    cmd
  | scope_open
  | scope_close
  | math_inline_delim
  | math_multiline_open
  | math_multiline_close
  | linebreak
  | macro

  // scope_open | scope_close | linebreak | macro | cmd
}

// escaped
lparen = _{ "\\{" }
rparen = _{ "\\}" }

scope_open = { !("\\") ~ "{" }
scope_close = { !("\\") ~ "}" }
linebreak = { "\\\\" | "\n\n" }
macro = { "#" } // TODO: I think these need a number after them? not sure


//
// MATH
//
math_inline_delim = _{ "$" }
math_multiline_open = _{ "\\[" }
math_multiline_close = _{ "\\]" }

math = {
  (math_inline_delim ~ math_inline ~ math_inline_delim)
| (math_multiline_open ~ math_multiline ~ math_multiline_close)
}

math_inline = { (cmd | text)+ }
math_multiline = { (cmd | text)+ }
